{
  "openapi": "3.0.0",
  "info": {
    "title": "Secrets API",
    "version": "1.0.0",
    "description": "API specification for template-service service"
  },
  "paths": {
    "/secrets": {
      "get": {
        "summary": "List all secrets",
        "operationId": "listSecrets",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 20
            },
            "description": "Maximum number of secrets to return"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0
            },
            "description": "Number of secrets to skip"
          },
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Filter by active status"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "created_at",
                "updated_at",
                "name"
              ],
              "default": "created_at"
            },
            "description": "Sort order"
          }
        ],
        "responses": {
          "200": {
            "description": "List of secrets",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/secret"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - missing or invalid auth headers, or not logged in.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - user does not have required privileges.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new secret",
        "operationId": "createSecret",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/secret-create-request"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Secret created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/secret"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - missing or invalid auth headers, or not logged in.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - user does not have required privileges.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/secrets/{id}": {
      "put": {
        "summary": "Update an existing secret",
        "operationId": "updateSecret",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Secret ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/secret-update-request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Secret updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/secret"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - missing or invalid auth headers, or not logged in.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - user does not have required privileges.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Secret not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a secret (soft delete)",
        "operationId": "deleteSecret",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Secret ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Secret deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Secret deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - missing or invalid auth headers, or not logged in.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - user does not have required privileges.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Secret not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Error": {
        "$ref": "#/components/schemas/error"
      },
      "Secret": {
        "$ref": "#/components/schemas/secret"
      },
      "SecretCreateRequest": {
        "$ref": "#/components/schemas/secret-create-request"
      },
      "SecretUpdateRequest": {
        "$ref": "#/components/schemas/secret-update-request"
      },
      "secret": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the secret",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "name": {
            "type": "string",
            "description": "Unique name for the secret",
            "example": "STRIPE_API_KEY"
          },
          "description": {
            "type": "string",
            "description": "Optional description of the secret",
            "example": "Stripe API key for payment processing"
          },
          "masked_value": {
            "type": "string",
            "description": "Masked value for admin display (shows as ***)",
            "example": "***"
          },
          "created_at": {
            "type": "number",
            "description": "Timestamp when the secret was created",
            "example": 1640995200000
          },
          "updated_at": {
            "type": "number",
            "description": "Timestamp when the secret was last updated",
            "example": 1640995200000
          },
          "is_active": {
            "type": "boolean",
            "description": "Whether the secret is active",
            "example": true
          }
        },
        "required": [
          "id",
          "name",
          "masked_value",
          "created_at",
          "updated_at",
          "is_active"
        ]
      },
      "error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "A short, machine-readable error code, for when HTTP status codes are not sufficient."
          },
          "message": {
            "type": "string",
            "description": "A human-readable description of the error.",
            "example": "The requested resource could not be found."
          }
        }
      },
      "secret-create-request": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Unique name for the secret",
            "example": "STRIPE_API_KEY"
          },
          "description": {
            "type": "string",
            "description": "Optional description of the secret",
            "example": "Stripe API key for payment processing"
          },
          "value": {
            "type": "string",
            "description": "The actual secret value to be encrypted",
            "example": "sk_test_1234567890abcdef"
          }
        },
        "required": [
          "name",
          "value"
        ]
      },
      "secret-update-request": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Updated description of the secret",
            "example": "Updated Stripe API key for payment processing"
          },
          "value": {
            "type": "string",
            "description": "New secret value to be encrypted",
            "example": "sk_test_9876543210fedcba"
          },
          "is_active": {
            "type": "boolean",
            "description": "Whether to activate or deactivate the secret",
            "example": true
          }
        }
      }
    }
  }
}