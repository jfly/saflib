{
  "openapi": "3.0.0",
  "info": {
    "title": "SAF Auth API",
    "version": "1.0.0",
    "description": "Authentication API for SAF"
  },
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Register New User",
        "operationId": "registerUser",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "additionalProperties": false,
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8
                  },
                  "name": {
                    "type": "string",
                    "description": "User's full name (optional)"
                  },
                  "givenName": {
                    "type": "string",
                    "description": "User's given name (optional)"
                  },
                  "familyName": {
                    "type": "string",
                    "description": "User's family name (optional)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          },
          "409": {
            "description": "Email already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Authenticate User",
        "operationId": "loginUser",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "additionalProperties": false,
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "summary": "Logout User",
        "operationId": "logoutUser",
        "tags": [
          "auth"
        ],
        "responses": {
          "200": {
            "description": "Successful logout",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/auth/verify": {
      "get": {
        "summary": "Verify Authentication Status",
        "description": "Used by Caddy for forward authentication. Verifies if the user is authenticated and adds user information headers for downstream services.",
        "operationId": "verifyAuth",
        "tags": [
          "auth"
        ],
        "responses": {
          "200": {
            "description": "User is authenticated",
            "headers": {
              "X-User-ID": {
                "schema": {
                  "type": "string"
                },
                "description": "The authenticated user's ID"
              },
              "X-User-Email": {
                "schema": {
                  "type": "string",
                  "format": "email"
                },
                "description": "The authenticated user's email"
              },
              "X-User-Scopes": {
                "schema": {
                  "type": "string"
                },
                "description": "Comma-separated list of user's permission scopes"
              },
              "X-User-Email-Verified": {
                "schema": {
                  "type": "string",
                  "enum": [
                    "true",
                    "false"
                  ]
                },
                "description": "Whether the authenticated user's email is verified ('true' or 'false')"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          },
          "401": {
            "description": "User is not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "CSRF token mismatch",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/forgot-password": {
      "post": {
        "summary": "Request Password Reset",
        "operationId": "forgotPassword",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "additionalProperties": false,
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "If the user exists, a recovery email was sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "message"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "description": "A generic message indicating that if the user exists, a recovery email was sent"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid email format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/reset-password": {
      "post": {
        "summary": "Reset Password Using Token",
        "operationId": "resetPassword",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "token",
                  "newPassword"
                ],
                "additionalProperties": false,
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "The temporary password token received via email"
                  },
                  "newPassword": {
                    "type": "string",
                    "minLength": 8,
                    "description": "The new password to set"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password successfully reset",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid token or password",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/verify-email": {
      "post": {
        "summary": "Verify Email Address",
        "operationId": "verifyEmail",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "token"
                ],
                "additionalProperties": false,
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "The verification token sent in the email"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email verified successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          },
          "400": {
            "description": "Invalid or expired token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "User not logged in",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "User not authorized to verify email",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/resend-verification": {
      "post": {
        "summary": "Resend Verification Email",
        "operationId": "resendVerification",
        "tags": [
          "auth"
        ],
        "responses": {
          "200": {
            "description": "Verification email sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "message"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "description": "A generic message indicating that the verification email was sent"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "User not logged in",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/set-password": {
      "post": {
        "summary": "Change User Password",
        "operationId": "setPassword",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "currentPassword",
                  "newPassword"
                ],
                "additionalProperties": false,
                "properties": {
                  "currentPassword": {
                    "type": "string",
                    "description": "The user's current password for verification"
                  },
                  "newPassword": {
                    "type": "string",
                    "minLength": 8,
                    "description": "The new password to set"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password changed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "User not logged in or invalid current password",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/profile": {
      "get": {
        "summary": "Get User Profile",
        "description": "Get the profile information for the currently logged in user",
        "operationId": "getUserProfile",
        "tags": [
          "auth"
        ],
        "responses": {
          "200": {
            "description": "User profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update User Profile",
        "description": "Update the profile information for the currently logged in user",
        "operationId": "updateUserProfile",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User's email address"
                  },
                  "emailVerified": {
                    "type": "boolean",
                    "description": "Whether the user's email address has been verified"
                  },
                  "name": {
                    "type": "string",
                    "nullable": true,
                    "description": "User's full name"
                  },
                  "givenName": {
                    "type": "string",
                    "nullable": true,
                    "description": "User's given name (first name)"
                  },
                  "familyName": {
                    "type": "string",
                    "nullable": true,
                    "description": "User's family name (last name)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "User not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "409": {
            "description": "Email already exists (if trying to update email to one that's already taken)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "List all users",
        "operationId": "listUsers",
        "tags": [
          "auth"
        ],
        "security": [
          {
            "scopes": [
              "users:read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "A list of user objects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ListUsersResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - missing or invalid auth headers, or not logged in.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - user does not have admin privileges.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/email/sent": {
      "get": {
        "summary": "List all sent emails",
        "operationId": "listSentEmails",
        "tags": [
          "email"
        ],
        "parameters": [
          {
            "name": "userEmail",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "The email address of the user to get sent emails to or from"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of sent emails.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/sent-email"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - server is not mocking email sends",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "scopes": {
        "type": "apiKey",
        "in": "header",
        "name": "X-User-Scopes",
        "description": "Comma-separated list of user scopes"
      }
    },
    "schemas": {
      "Error": {
        "$ref": "#/components/schemas/error"
      },
      "User": {
        "$ref": "#/components/schemas/user"
      },
      "user": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "number"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "emailVerified": {
            "type": "boolean",
            "description": "Whether the user's email address has been verified"
          },
          "name": {
            "type": "string",
            "description": "User's full name (optional)"
          },
          "givenName": {
            "type": "string",
            "description": "User's given name (optional)"
          },
          "familyName": {
            "type": "string",
            "description": "User's family name (optional)"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time the user was created"
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of user's permission scopes"
          }
        }
      },
      "error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "A short, machine-readable error code, for when HTTP status codes are not sufficient."
          },
          "message": {
            "type": "string",
            "description": "A human-readable description of the error.",
            "example": "The requested resource could not be found."
          }
        }
      },
      "ListUsersResponse": {
        "type": "object",
        "required": [
          "id",
          "email",
          "createdAt"
        ],
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the user"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the user was created (ISO 8601 format)"
          },
          "lastLoginAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Timestamp of the user's last login (ISO 8601 format), or null if never logged in"
          },
          "verifiedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Timestamp when the user's email was verified (ISO 8601 format), or null if not verified"
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of permission strings assigned to the user"
          }
        }
      },
      "sent-email": {
        "type": "object",
        "properties": {
          "to": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "cc": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "bcc": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "subject": {
            "type": "string"
          },
          "text": {
            "type": "string"
          },
          "html": {
            "type": "string"
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "from": {
            "type": "string"
          },
          "timeSent": {
            "type": "number"
          },
          "replyTo": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "to",
          "subject",
          "from"
        ]
      }
    }
  }
}